#!/bin/bash

#set -euo pipefail
#set -x

# Init for Docker-based CLI application
#
# Always force build image (1)
DOCKER_FORCE_REBUILD=${DOCKER_FORCE_REBUILD}
# You may append a specific version to the tag
DOCKER_APP_IMAGE='araport/deploy-community-tracks'
# Only change if you need to and know what you're doing
HOST_SCRATCH='/data'

# YOU MUST INCLUDE THIS LINE AFTER DEFINING
# THE PREVIOUS VARIABLES ^^
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${SCRIPT_DIR}/docker-common.sh

# Inputs and parameters

# Make Docker environment file - values will subbed in by agave at run-time
# eventually, pass these in from the app
cat <<EOT >> env.list
AGAVE_BEARER_TOKEN=${AGAVE_BEARER_TOKEN}
AGAVE_JOB_ID=${AGAVE_JOB_ID}
AGAVE_JOB_OWNER=${AGAVE_JOB_OWNER}
AGAVE_SYSTEM_ID=data.iplantcollaborative.org
AGAVE_SHARED_DIR=araport/community-tracks/staging
AGAVE_TRACK_URL_BASE=https://de.iplantcollaborative.org/anon-files/iplant/home
AGAVE_ANONYMOUS_USER=anonymous
EOT

# actual track publishing parameters
GDF_FILE="${GDF_FILE}"
DESCRIPTION="${DESCRIPTION}"
GENOME_VERSION="${GENOME_VERSION}"

die() {
	echo "$1" 1>&2
	exit 1
}

realpath() {
    echo "$(cd "$(dirname "$1")" || exit 1; pwd)"
}

# check for docker install
docker info > /dev/null || die "Docker is not installed. Exiting."

#docker run -v "${HOME}/.agave:/root/.agave" -v "${gdf_path}:/data" "${IMAGENAME}:latest" "$gdf_file" "$description"
${DOCKER_APP_RUN} "${GDF_FILE}" "${DESCRIPTION}"
rm env.list
